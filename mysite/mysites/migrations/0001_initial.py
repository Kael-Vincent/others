# Generated by Django 2.0.1 on 2018-05-28 10:43

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TAcceptOverdue',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('org_id', models.BigIntegerField(blank=True, null=True)),
                ('accept_min_day', models.SmallIntegerField(blank=True, null=True)),
                ('accept_max_day', models.SmallIntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('last_update_user', models.BigIntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_accept_overdue',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TApiAccount',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('password', models.CharField(blank=True, max_length=64, null=True)),
                ('org_id', models.BigIntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_api_account',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TApplyRelieve',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('record_debt_id', models.BigIntegerField(blank=True, null=True)),
                ('settlement_amount', models.IntegerField(blank=True, null=True)),
                ('reject_reason', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 't_apply_relieve',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TArea',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('adcode', models.CharField(blank=True, max_length=16, null=True)),
                ('parent_code', models.CharField(blank=True, max_length=16, null=True)),
                ('name', models.CharField(blank=True, max_length=16, null=True)),
                ('create_time', models.DateTimeField()),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_area',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TArrearDebt',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('task_code', models.CharField(blank=True, max_length=32, null=True)),
                ('creditor_id', models.BigIntegerField(blank=True, null=True)),
                ('debtor_id', models.BigIntegerField(blank=True, null=True)),
                ('should_refund_principal', models.IntegerField(blank=True, null=True)),
                ('should_refund_interest', models.IntegerField(blank=True, null=True)),
                ('should_refund_compensation', models.IntegerField(blank=True, null=True)),
                ('should_refund_total', models.IntegerField(blank=True, null=True)),
                ('relieve_amount', models.IntegerField(blank=True, null=True)),
                ('already_refund_amount', models.IntegerField(blank=True, null=True)),
                ('borrow_date', models.DateField(blank=True, null=True)),
                ('should_refund_date', models.DateField(blank=True, null=True)),
                ('overdue_day', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('last_sync_time', models.DateTimeField(blank=True, null=True)),
                ('loan_business_department', models.CharField(blank=True, max_length=32, null=True)),
                ('customer_manager', models.CharField(blank=True, max_length=32, null=True)),
                ('customer_manager_mobile', models.CharField(blank=True, max_length=16, null=True)),
                ('poundage', models.IntegerField(blank=True, null=True)),
                ('poundage_compensation', models.IntegerField(blank=True, null=True)),
                ('creditor_entrust_expire_time', models.DateTimeField(blank=True, null=True)),
                ('funds_provider', models.CharField(blank=True, max_length=32, null=True)),
                ('product_name', models.CharField(blank=True, max_length=32, null=True)),
                ('product_code', models.CharField(blank=True, max_length=32, null=True)),
                ('bill_no', models.CharField(blank=True, max_length=256, null=True)),
                ('data_source', models.CharField(blank=True, max_length=32, null=True)),
                ('pub_time', models.DateTimeField(blank=True, null=True)),
                ('loan_agreement_url', models.CharField(blank=True, max_length=128, null=True)),
                ('task_code_remark', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 't_arrear_debt',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TBlackDebtor',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('card_type', models.IntegerField(blank=True, null=True)),
                ('card_no', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('real_name', models.CharField(blank=True, max_length=64, null=True)),
                ('reason', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 't_black_debtor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TBusinessDepartment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('business_city', models.CharField(blank=True, max_length=32, null=True)),
                ('business_dept_name', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('business_dept_code', models.CharField(blank=True, max_length=32, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_business_department',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TClickRepairInfoCount',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('desc', models.CharField(blank=True, max_length=64, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_click_repair_info_count',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TCollectionAgencyDailyReport',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('org_id', models.BigIntegerField(blank=True, null=True)),
                ('dept_id', models.BigIntegerField(blank=True, null=True)),
                ('refund_total', models.BigIntegerField(blank=True, null=True)),
                ('refund_record_count', models.IntegerField(blank=True, null=True)),
                ('refund_debt_count', models.IntegerField(blank=True, null=True)),
                ('refund_date', models.DateField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_collection_agency_daily_report',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TCollectionEntrust',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('debtor_id', models.BigIntegerField(blank=True, null=True)),
                ('dept_id', models.BigIntegerField(blank=True, null=True)),
                ('org_id', models.BigIntegerField(blank=True, null=True)),
                ('dispatcher_id', models.BigIntegerField(blank=True, null=True)),
                ('entrust_begin_time', models.DateTimeField(blank=True, null=True)),
                ('entrust_expire_time', models.DateTimeField(blank=True, null=True)),
                ('entrust_end_time', models.DateTimeField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=128, null=True)),
                ('address_type', models.IntegerField(blank=True, null=True)),
                ('already_refund_amount', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('abandon_reason', models.CharField(blank=True, max_length=128, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('compete_address_longitude', models.FloatField(blank=True, null=True)),
                ('compete_address_latitude', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_collection_entrust',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TCollectionEntrustDebt',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('debt_id', models.BigIntegerField(blank=True, null=True)),
                ('entrust_id', models.BigIntegerField(blank=True, null=True)),
                ('entrust_begin_time', models.DateTimeField(blank=True, null=True)),
                ('entrust_expire_time', models.DateTimeField(blank=True, null=True)),
                ('entrust_end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_collection_entrust_debt',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TCollectionRecord',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('entrust_id', models.BigIntegerField(blank=True, null=True)),
                ('recorder_id', models.BigIntegerField(blank=True, null=True)),
                ('collection_way', models.IntegerField(blank=True, null=True)),
                ('negotiater', models.IntegerField(blank=True, null=True)),
                ('address_type', models.IntegerField(blank=True, null=True)),
                ('current_place', models.CharField(blank=True, max_length=128, null=True)),
                ('current_longitude', models.CharField(blank=True, max_length=32, null=True)),
                ('current_latitude', models.CharField(blank=True, max_length=32, null=True)),
                ('remark', models.CharField(blank=True, max_length=200, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_collection_record',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TCollectionRecordDebt',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('record_id', models.BigIntegerField(blank=True, null=True)),
                ('debt_id', models.BigIntegerField(blank=True, null=True)),
                ('result', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_collection_record_debt',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TCollectionRecordImg',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('record_id', models.BigIntegerField(blank=True, null=True)),
                ('img', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 't_collection_record_img',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TCommissionDetail',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('creditor_id', models.BigIntegerField(blank=True, null=True)),
                ('org_id', models.BigIntegerField(blank=True, null=True)),
                ('user_id', models.BigIntegerField(blank=True, null=True)),
                ('dept_id', models.BigIntegerField(blank=True, null=True)),
                ('refund_id', models.BigIntegerField(blank=True, null=True)),
                ('overdue_day', models.SmallIntegerField(blank=True, null=True)),
                ('commission_amout', models.IntegerField(blank=True, null=True)),
                ('principal_commission', models.IntegerField(blank=True, null=True)),
                ('interest_commission', models.IntegerField(blank=True, null=True)),
                ('compensation_commission', models.IntegerField(blank=True, null=True)),
                ('poundage_commission', models.IntegerField(blank=True, null=True)),
                ('poundage_compensation_commission', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_commission_detail',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TCommissionMonth',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('creditor_id', models.BigIntegerField(blank=True, null=True)),
                ('org_id', models.BigIntegerField(blank=True, null=True)),
                ('settle_month', models.IntegerField(blank=True, null=True)),
                ('sum_amout', models.BigIntegerField(blank=True, null=True)),
                ('refund_principal', models.BigIntegerField(blank=True, null=True)),
                ('refund_interest', models.BigIntegerField(blank=True, null=True)),
                ('refund_compensation', models.BigIntegerField(blank=True, null=True)),
                ('refund_poundage', models.BigIntegerField(blank=True, null=True)),
                ('refund_poundage_compensation', models.BigIntegerField(blank=True, null=True)),
                ('principal_commission', models.BigIntegerField(blank=True, null=True)),
                ('interest_commission', models.BigIntegerField(blank=True, null=True)),
                ('compensation_commission', models.BigIntegerField(blank=True, null=True)),
                ('poundage_commission', models.BigIntegerField(blank=True, null=True)),
                ('poundage_compensation_commission', models.BigIntegerField(blank=True, null=True)),
                ('min_overdue_day', models.SmallIntegerField(blank=True, null=True)),
                ('max_overdue_day', models.SmallIntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_commission_month',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TCommissionPay',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('creditor_id', models.BigIntegerField(blank=True, null=True)),
                ('settle_month', models.IntegerField(blank=True, null=True)),
                ('pay_amout', models.IntegerField(blank=True, null=True)),
                ('pay_time', models.DateTimeField(blank=True, null=True)),
                ('img', models.CharField(blank=True, max_length=256, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_commission_pay',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TCommissionRate',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('org_id', models.BigIntegerField(blank=True, null=True)),
                ('min_overdue_day', models.SmallIntegerField(blank=True, null=True)),
                ('max_overdue_day', models.SmallIntegerField(blank=True, null=True)),
                ('principal_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('interest_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('compensation_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('poundage_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('poundage_compensation_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('last_update_user', models.BigIntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_commission_rate',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TContactInfo',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('debtor_id', models.BigIntegerField(blank=True, null=True)),
                ('real_name', models.CharField(blank=True, max_length=64, null=True)),
                ('relationship', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_contact_info',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TContactInfoDetail',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('info', models.CharField(blank=True, max_length=128, null=True)),
                ('info_type', models.IntegerField(blank=True, null=True)),
                ('contact_info_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_contact_info_detail',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TCreditInfo',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('debtor_id', models.BigIntegerField(blank=True, null=True)),
                ('org_id', models.BigIntegerField(blank=True, null=True)),
                ('total_amount', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('business_department_city', models.CharField(blank=True, max_length=32, null=True)),
                ('loan_business_department', models.CharField(blank=True, max_length=32, null=True)),
                ('loan_business_dept_code', models.CharField(blank=True, max_length=32, null=True)),
                ('bank_card', models.CharField(blank=True, max_length=32, null=True)),
                ('business_apply_img', models.CharField(blank=True, max_length=5120, null=True)),
                ('entrust_start_time', models.DateTimeField(blank=True, null=True)),
                ('entrust_end_time', models.DateTimeField(blank=True, null=True)),
                ('separate_hand', models.CharField(blank=True, max_length=16, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('outer_debtor_id', models.CharField(blank=True, max_length=64, null=True)),
                ('entrust_status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_credit_info',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TCreditorBankInfo',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('org_id', models.BigIntegerField(blank=True, null=True)),
                ('pay_bank', models.CharField(blank=True, max_length=32, null=True)),
                ('account_name', models.CharField(blank=True, max_length=64, null=True)),
                ('account_no', models.CharField(blank=True, max_length=32, null=True)),
                ('alipay_url', models.CharField(blank=True, max_length=256, null=True)),
                ('alipay_name', models.CharField(blank=True, max_length=16, null=True)),
                ('weipay_url', models.CharField(blank=True, max_length=256, null=True)),
                ('weipay_name', models.CharField(blank=True, max_length=16, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_creditor_bank_info',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TCreditorRefundDailyReport',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('creditor_id', models.BigIntegerField(blank=True, null=True)),
                ('refund_total', models.BigIntegerField(blank=True, null=True)),
                ('refund_date', models.DateField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_creditor_refund_daily_report',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TDebtor',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('card_type', models.IntegerField(blank=True, null=True)),
                ('card_no', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('real_name', models.CharField(blank=True, max_length=64, null=True)),
                ('sex', models.IntegerField(blank=True, null=True)),
                ('marital_status', models.IntegerField(blank=True, null=True)),
                ('children_status', models.IntegerField(blank=True, null=True)),
                ('mobile', models.CharField(blank=True, max_length=16, null=True)),
                ('mobile_status', models.IntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=64, null=True)),
                ('qq', models.CharField(blank=True, db_column='QQ', max_length=32, null=True)),
                ('web_chat', models.CharField(blank=True, max_length=32, null=True)),
                ('residence_province', models.CharField(blank=True, max_length=16, null=True)),
                ('residence_city', models.CharField(blank=True, max_length=16, null=True)),
                ('residence_area', models.CharField(blank=True, max_length=16, null=True)),
                ('residence_address', models.CharField(blank=True, max_length=128, null=True)),
                ('residence_longitude', models.FloatField(blank=True, null=True)),
                ('residence_latitude', models.FloatField(blank=True, null=True)),
                ('residence_status', models.IntegerField(blank=True, null=True)),
                ('company_province', models.CharField(blank=True, max_length=16, null=True)),
                ('company_city', models.CharField(blank=True, max_length=16, null=True)),
                ('company_area', models.CharField(blank=True, max_length=16, null=True)),
                ('company_address', models.CharField(blank=True, max_length=128, null=True)),
                ('company_longitude', models.FloatField(blank=True, null=True)),
                ('company_latitude', models.FloatField(blank=True, null=True)),
                ('company_address_status', models.IntegerField(blank=True, null=True)),
                ('company_name', models.CharField(blank=True, max_length=64, null=True)),
                ('present_province', models.CharField(blank=True, max_length=16, null=True)),
                ('present_city', models.CharField(blank=True, max_length=16, null=True)),
                ('present_area', models.CharField(blank=True, max_length=16, null=True)),
                ('present_longitude', models.FloatField(blank=True, null=True)),
                ('present_latitude', models.FloatField(blank=True, null=True)),
                ('present_address', models.CharField(blank=True, max_length=128, null=True)),
                ('present_address_status', models.IntegerField(blank=True, null=True)),
                ('identity_img', models.CharField(blank=True, max_length=2048, null=True)),
                ('debtor_img', models.CharField(blank=True, max_length=2560, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('abandon_reason', models.CharField(blank=True, max_length=128, null=True)),
                ('update_time', models.DateTimeField()),
                ('create_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_debtor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TDebtorInfo',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('debtor_id', models.BigIntegerField(blank=True, null=True)),
                ('residence_province', models.CharField(blank=True, max_length=16, null=True)),
                ('residence_city', models.CharField(blank=True, max_length=16, null=True)),
                ('residence_area', models.CharField(blank=True, max_length=16, null=True)),
                ('residence_address', models.CharField(blank=True, max_length=128, null=True)),
                ('residence_longitude', models.FloatField(blank=True, null=True)),
                ('residence_latitude', models.FloatField(blank=True, null=True)),
                ('residence_status', models.IntegerField(blank=True, null=True)),
                ('company_province', models.CharField(blank=True, max_length=16, null=True)),
                ('company_city', models.CharField(blank=True, max_length=16, null=True)),
                ('company_area', models.CharField(blank=True, max_length=16, null=True)),
                ('company_address', models.CharField(blank=True, max_length=128, null=True)),
                ('company_longitude', models.FloatField(blank=True, null=True)),
                ('company_latitude', models.FloatField(blank=True, null=True)),
                ('company_address_status', models.IntegerField(blank=True, null=True)),
                ('company_name', models.CharField(blank=True, max_length=64, null=True)),
                ('present_province', models.CharField(blank=True, max_length=16, null=True)),
                ('present_city', models.CharField(blank=True, max_length=16, null=True)),
                ('present_area', models.CharField(blank=True, max_length=16, null=True)),
                ('present_longitude', models.FloatField(blank=True, null=True)),
                ('present_latitude', models.FloatField(blank=True, null=True)),
                ('present_address', models.CharField(blank=True, max_length=128, null=True)),
                ('present_address_status', models.IntegerField(blank=True, null=True)),
                ('real_name', models.CharField(blank=True, max_length=64, null=True)),
                ('card_no', models.CharField(blank=True, max_length=32, null=True)),
                ('sex', models.IntegerField(blank=True, null=True)),
                ('marital_status', models.IntegerField(blank=True, null=True)),
                ('children_status', models.IntegerField(blank=True, null=True)),
                ('mobile', models.CharField(blank=True, max_length=16, null=True)),
                ('mobile_status', models.IntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=64, null=True)),
                ('qq', models.CharField(blank=True, db_column='QQ', max_length=32, null=True)),
                ('web_chat', models.CharField(blank=True, max_length=32, null=True)),
                ('identity_img', models.CharField(blank=True, max_length=2048, null=True)),
                ('debtor_img', models.CharField(blank=True, max_length=2560, null=True)),
                ('creditor_id', models.BigIntegerField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('create_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_debtor_info',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TDebtorUrgentContactor',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('debtor_id', models.BigIntegerField(blank=True, null=True)),
                ('debt_id', models.BigIntegerField(blank=True, null=True)),
                ('real_name', models.CharField(blank=True, max_length=64, null=True)),
                ('relationship', models.CharField(blank=True, max_length=16, null=True)),
                ('sex', models.IntegerField(blank=True, null=True)),
                ('mobile', models.CharField(blank=True, max_length=16, null=True)),
                ('mobile_status', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_debtor_urgent_contactor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TDeptWithdraw',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('debt_id', models.BigIntegerField(blank=True, null=True)),
                ('withdrawer', models.BigIntegerField(blank=True, null=True)),
                ('withdrawer_mobile', models.CharField(blank=True, max_length=16, null=True)),
                ('reason', models.CharField(blank=True, max_length=128, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_dept_withdraw',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TEntrustArgsSetting',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('org_id', models.BigIntegerField(blank=True, null=True)),
                ('expire_day', models.SmallIntegerField(blank=True, null=True)),
                ('fin_remain_max_money', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('last_update_user', models.BigIntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_entrust_args_setting',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TFeedback',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('content', models.CharField(blank=True, max_length=120, null=True)),
                ('submitter', models.BigIntegerField(blank=True, null=True)),
                ('submit_time', models.DateTimeField(blank=True, null=True)),
                ('reply', models.CharField(blank=True, max_length=120, null=True)),
                ('respondent', models.BigIntegerField(blank=True, null=True)),
                ('reply_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_feedback',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TFinDebtRepayRate',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('org_id', models.BigIntegerField(blank=True, null=True)),
                ('start_money', models.IntegerField(blank=True, null=True)),
                ('end_money', models.IntegerField(blank=True, null=True)),
                ('rate', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('last_update_user', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_fin_debt_repay_rate',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TFirstpartyOutsourceRelation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('creditor_id', models.BigIntegerField()),
                ('org_id', models.BigIntegerField()),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_firstparty_outsource_relation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TFrozedUserRecord',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('mobile', models.CharField(blank=True, max_length=32, null=True)),
                ('real_name', models.CharField(blank=True, max_length=64, null=True)),
                ('frozed_time', models.DateTimeField(blank=True, null=True)),
                ('unlock_time', models.DateTimeField()),
                ('belong_district', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 't_frozed_user_record',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TGuarantor',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('debt_id', models.BigIntegerField(blank=True, null=True)),
                ('card_img', models.CharField(blank=True, max_length=256, null=True)),
                ('card_type', models.IntegerField(blank=True, null=True)),
                ('card_no', models.CharField(blank=True, max_length=32, null=True)),
                ('real_name', models.CharField(blank=True, max_length=64, null=True)),
                ('sex', models.IntegerField(blank=True, null=True)),
                ('mobile', models.CharField(blank=True, max_length=16, null=True)),
                ('mobile_status', models.IntegerField(blank=True, null=True)),
                ('company_province', models.CharField(blank=True, max_length=16, null=True)),
                ('company_city', models.CharField(blank=True, max_length=16, null=True)),
                ('company_area', models.CharField(blank=True, max_length=16, null=True)),
                ('company_address', models.CharField(blank=True, max_length=128, null=True)),
                ('company_longitude', models.FloatField(blank=True, null=True)),
                ('company_latitude', models.FloatField(blank=True, null=True)),
                ('company_address_status', models.IntegerField(blank=True, null=True)),
                ('company_name', models.CharField(blank=True, max_length=16, null=True)),
                ('present_province', models.CharField(blank=True, max_length=16, null=True)),
                ('present_city', models.CharField(blank=True, max_length=16, null=True)),
                ('present_area', models.CharField(blank=True, max_length=16, null=True)),
                ('present_longitude', models.FloatField(blank=True, null=True)),
                ('present_latitude', models.FloatField(blank=True, null=True)),
                ('present_address', models.CharField(blank=True, max_length=128, null=True)),
                ('present_address_status', models.IntegerField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('create_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_guarantor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TMenuConfig',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('parent_id', models.BigIntegerField(blank=True, null=True)),
                ('value', models.CharField(blank=True, max_length=128, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('desc', models.CharField(blank=True, max_length=128, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_menu_config',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TNew',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('task_code', models.CharField(blank=True, max_length=16, null=True)),
                ('product_code', models.CharField(blank=True, max_length=32, null=True)),
                ('product_name', models.CharField(blank=True, max_length=32, null=True)),
                ('data_source', models.CharField(blank=True, max_length=32, null=True)),
                ('bill_no', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 't_new',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TNoProgress',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('record_debt_id', models.BigIntegerField(blank=True, null=True)),
                ('debtor_id', models.BigIntegerField(blank=True, null=True)),
                ('dial_mobile', models.CharField(blank=True, max_length=50, null=True)),
                ('dial_mobile_condition', models.CharField(blank=True, max_length=20, null=True)),
                ('visit_address', models.CharField(blank=True, max_length=128, null=True)),
                ('visit_address_condition', models.CharField(blank=True, max_length=20, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_no_progress',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TNotice',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=16, unique=True)),
                ('content', models.CharField(blank=True, max_length=512, null=True)),
                ('sender_mobile', models.CharField(blank=True, max_length=16, null=True)),
                ('sender_name', models.CharField(blank=True, max_length=16, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_notice',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TOperationLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField()),
                ('req_ip', models.CharField(blank=True, max_length=16, null=True)),
                ('req_url', models.CharField(blank=True, max_length=256, null=True)),
                ('req_args', models.CharField(blank=True, max_length=512, null=True)),
                ('opr_time', models.DateTimeField(blank=True, null=True)),
                ('opr_result', models.IntegerField(blank=True, null=True)),
                ('remark', models.CharField(blank=True, max_length=512, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_operation_log',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TOrganizationDepartment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('org_id', models.BigIntegerField()),
                ('parent_id', models.BigIntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_organization_department',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TPlatformBankInfo',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pay_bank', models.CharField(blank=True, max_length=32, null=True)),
                ('account_name', models.CharField(blank=True, max_length=64, null=True)),
                ('account_no', models.CharField(blank=True, max_length=32, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_platform_bank_info',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TPromiseRefund',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('record_debt_id', models.BigIntegerField(blank=True, null=True)),
                ('promise_refund_date', models.DateTimeField(blank=True, null=True)),
                ('promise_refund_amount', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_promise_refund',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TRefund',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('serial_num', models.CharField(blank=True, max_length=128, null=True)),
                ('creditor_id', models.BigIntegerField(blank=True, null=True)),
                ('debt_id', models.BigIntegerField(blank=True, null=True)),
                ('refund_total', models.IntegerField(blank=True, null=True)),
                ('refund_principal', models.IntegerField(blank=True, null=True)),
                ('refund_interest', models.IntegerField(blank=True, null=True)),
                ('refund_compensation', models.IntegerField(blank=True, null=True)),
                ('refund_poundage', models.IntegerField(blank=True, null=True)),
                ('refund_poundage_compensation', models.IntegerField(blank=True, null=True)),
                ('refund_way', models.IntegerField(blank=True, null=True)),
                ('refund_time', models.DateTimeField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('status', models.IntegerField(blank=True, db_column='STATUS', null=True)),
                ('actual_refund_total', models.IntegerField(blank=True, null=True)),
                ('is_clear', models.IntegerField(blank=True, db_column='IS_CLEAR', null=True)),
                ('push_type', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 't_refund',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TRefundRecord',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('record_debt_id', models.BigIntegerField(blank=True, null=True)),
                ('refund_amount', models.IntegerField(blank=True, null=True)),
                ('refund_way', models.IntegerField(blank=True, null=True)),
                ('refund_id', models.BigIntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('bank_card', models.CharField(blank=True, max_length=30, null=True)),
                ('refund_time', models.DateTimeField(blank=True, null=True)),
                ('pay_money_way', models.IntegerField(blank=True, null=True)),
                ('pay_money_name', models.CharField(blank=True, max_length=20, null=True)),
                ('pay_money_bank', models.CharField(blank=True, max_length=50, null=True)),
                ('update_time', models.DateTimeField()),
                ('reason', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 't_refund_record',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TRelievableRate',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('org_id', models.BigIntegerField(blank=True, null=True)),
                ('min_overdue_day', models.SmallIntegerField(blank=True, null=True)),
                ('max_overdue_day', models.SmallIntegerField(blank=True, null=True)),
                ('principal_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('interest_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('compensation_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('last_update_user', models.BigIntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_relievable_rate',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TRepairDebtorActiveAddress',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('debtor_id', models.BigIntegerField(blank=True, null=True)),
                ('user_id', models.BigIntegerField()),
                ('address', models.CharField(blank=True, max_length=128, null=True)),
                ('address_status', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('repair_time', models.DateTimeField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('type', models.IntegerField(blank=True, null=True)),
                ('longitude', models.CharField(blank=True, max_length=32, null=True)),
                ('latitude', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 't_repair_debtor_active_address',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TRepairDebtorInfo',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('debtor_id', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('user_id', models.BigIntegerField()),
                ('mobile', models.CharField(blank=True, max_length=16, null=True)),
                ('mobile_status', models.IntegerField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=128, null=True)),
                ('address_status', models.IntegerField(blank=True, null=True)),
                ('company_name', models.CharField(blank=True, max_length=128, null=True)),
                ('company_name_status', models.IntegerField(blank=True, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('repair_time', models.DateTimeField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_repair_debtor_info',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TResource',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('status', models.IntegerField()),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('depth', models.BigIntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('path', models.CharField(blank=True, max_length=255, null=True)),
                ('seq', models.BigIntegerField(blank=True, null=True)),
                ('sup_id', models.BigIntegerField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('drop_down', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_resource',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TRole',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.IntegerField()),
                ('parent_id', models.BigIntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('org_id', models.BigIntegerField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_role',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TRoleResource',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('role_id', models.BigIntegerField()),
                ('res_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 't_role_resource',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TSms',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('biz_no', models.CharField(max_length=10)),
                ('sp_id', models.IntegerField(blank=True, null=True)),
                ('mobile', models.CharField(blank=True, max_length=16, null=True)),
                ('content', models.CharField(blank=True, max_length=256, null=True)),
                ('send_status', models.IntegerField(blank=True, null=True)),
                ('req_time', models.DateTimeField(blank=True, null=True)),
                ('send_time', models.DateTimeField(blank=True, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_sms',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TSysMessage',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=32, null=True)),
                ('content', models.CharField(blank=True, max_length=1024, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('event_id', models.BigIntegerField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_sys_message',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TSysMessageUser',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField()),
                ('msg_id', models.BigIntegerField(blank=True, null=True)),
                ('read_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_sys_message_user',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TSysOrganization',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('address', models.CharField(blank=True, max_length=128, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=32, null=True)),
                ('contact_mobile', models.CharField(blank=True, max_length=16, null=True)),
                ('contact_email', models.CharField(blank=True, max_length=64, null=True)),
                ('org_type', models.SmallIntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 't_sys_organization',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TSysUser',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('account', models.CharField(blank=True, max_length=32, null=True)),
                ('card_type', models.IntegerField(blank=True, null=True)),
                ('card_no', models.CharField(blank=True, max_length=32, null=True)),
                ('real_name', models.CharField(blank=True, max_length=64, null=True)),
                ('gender', models.IntegerField(blank=True, null=True)),
                ('head_img', models.CharField(blank=True, max_length=256, null=True)),
                ('mobile', models.CharField(blank=True, max_length=16, null=True, unique=True)),
                ('email', models.CharField(blank=True, max_length=64, null=True)),
                ('pwd', models.CharField(blank=True, max_length=128, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('push_status', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('org_id', models.BigIntegerField(blank=True, null=True)),
                ('dept_id', models.BigIntegerField(blank=True, null=True)),
                ('belong_district', models.CharField(blank=True, max_length=200, null=True)),
                ('city_manager', models.IntegerField(blank=True, null=True)),
                ('adcode', models.CharField(blank=True, max_length=16, null=True)),
                ('credit', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_sys_user',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TTemp',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField()),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 't_temp',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TTemp2',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('debtor_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 't_temp2',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TTempCard',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('card_no', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 't_temp_card',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TTempMobile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.CharField(max_length=16)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 't_temp_mobile',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TTempMobile2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.CharField(max_length=16)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 't_temp_mobile2',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TTempTaskCode',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('task_code', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'db_table': 't_temp_task_code',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TTempTaskCode2',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('task_code', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'db_table': 't_temp_task_code2',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TTempTaskCode3',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('task_code', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'db_table': 't_temp_task_code3',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TUserRole',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField()),
                ('role_id', models.BigIntegerField()),
                ('create_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_user_role',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TValidAddressCount',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('desc', models.CharField(blank=True, max_length=64, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('debtor_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_valid_address_count',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TValidAddressInfo',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('debtor_info_id', models.BigIntegerField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('debtor_id', models.BigIntegerField(blank=True, null=True)),
                ('user_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_valid_address_info',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TValidAddressRecord',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('debtor_id', models.BigIntegerField(blank=True, null=True)),
                ('result', models.CharField(blank=True, max_length=500, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField()),
                ('type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_valid_address_record',
                'managed': True,
            },
        ),
        migrations.AlterUniqueTogether(
            name='trepairdebtoractiveaddress',
            unique_together={('debtor_id', 'type')},
        ),
        migrations.AlterUniqueTogether(
            name='torganizationdepartment',
            unique_together={('name', 'org_id')},
        ),
        migrations.AlterUniqueTogether(
            name='tdebtorinfo',
            unique_together={('debtor_id', 'creditor_id')},
        ),
        migrations.AlterUniqueTogether(
            name='tcreditinfo',
            unique_together={('debtor_id', 'org_id')},
        ),
        migrations.AlterUniqueTogether(
            name='tarreardebt',
            unique_together={('task_code', 'creditor_id')},
        ),
    ]
